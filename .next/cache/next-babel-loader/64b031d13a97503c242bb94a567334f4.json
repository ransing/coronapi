{"ast":null,"code":"var _jsxFileName = \"/Users/ceaseless/Desktop/corona/Components/Map1.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\n\nfunction Map(props) {\n  var _useState = useState([]),\n      trails = _useState[0],\n      setTrails = _useState[1];\n\n  var _useState2 = useState(null),\n      selectedTrail = _useState2[0],\n      setSelectedTrail = _useState2[1];\n\n  useEffect(function () {\n    fetch(\"https://covid19.mathdro.id/api/confirmed\").then(function (r) {\n      return r.json();\n    }).then(function (trails) {\n      setTrails(trails); // debugger;\n    });\n    console.log(\"this is the data\", trails);\n  }, []);\n\n  var mapOnClick = function mapOnClick(trail) {\n    console.log(trail);\n    setSelectedTrail(trail);\n  };\n\n  return (// <div style={{ \"height\": \"120\", \"width\": \"120\" }}>\n    //   <div>\n    //     hgig \n    //     </div>\n    __jsx(GoogleMap // style={{ height: '100vh', width: '100%' }}\n    // width=\"120\" \n    // height=\"120\"\n    , {\n      defaultZoom: 7,\n      defaultCenter: {\n        lat: 39,\n        lng: -106\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, trails.map(function (trail) {\n      return __jsx(Marker, {\n        onClick: function onClick() {\n          return mapOnClick(trail);\n        },\n        key: trail.countryRegion,\n        position: {\n          lat: parseFloat(trail.lat),\n          lng: parseFloat(trail[\"long\"])\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }), selectedTrail && __jsx(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedTrail.lat),\n        lng: parseFloat(selectedTrail[\"long\"])\n      },\n      onCloseClick: function onCloseClick() {\n        return setSelectedTrail(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, selectedTrail.countryRegion), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, selectedTrail.provinceState), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, selectedTrail.confirmed), __jsx(\"button\", {\n      onClick: function onClick() {\n        return props.handleClick(selectedTrail);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"See Trails\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return props.handleClick(selectedTrail);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"See Trails\")))) // </div>\n\n  );\n}\n\nexport var WrappedMap = withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/ceaseless/Desktop/corona/Components/Map1.js"],"names":["React","useState","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Map","props","trails","setTrails","selectedTrail","setSelectedTrail","fetch","then","r","json","console","log","mapOnClick","trail","lat","lng","map","countryRegion","parseFloat","provinceState","confirmed","handleClick","WrappedMap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\n\nfunction Map(props) {\n  const [trails, setTrails] = useState([]);\n    const [selectedTrail, setSelectedTrail] = useState(null)\n\n  useEffect(() => {\n    fetch(\"https://covid19.mathdro.id/api/confirmed\")\n    .then(r => r.json())\n    .then(trails => {\n      setTrails(trails);\n      // debugger;\n      });\n    console.log(\"this is the data\", trails);\n  }, []);\n\n  const mapOnClick = (trail) => {\n    console.log(trail)\n    setSelectedTrail(trail)\n  }\n\n  return (\n\n    // <div style={{ \"height\": \"120\", \"width\": \"120\" }}>\n    //   <div>\n    //     hgig \n    //     </div>\n\n    <GoogleMap\n      // style={{ height: '100vh', width: '100%' }}\n      // width=\"120\" \n      // height=\"120\"\n      defaultZoom={7}\n      defaultCenter={{ lat: 39, lng: -106 }}\n    >\n      \n      {trails.map(trail => (\n          <Marker\n            onClick ={() => mapOnClick(trail)}\n            key={trail.countryRegion}\n            position={{\n              lat: parseFloat(trail.lat),\n              lng: parseFloat(trail.long)\n            }}\n            \n          />\n        )\n      )}\n\n      { selectedTrail && (\n        < InfoWindow\n        position={{\n          lat: parseFloat(selectedTrail.lat),\n          lng: parseFloat(selectedTrail.long)\n        }}\n        onCloseClick={() => setSelectedTrail(null) }\n        >\n          <div>\n            <h2>{selectedTrail.countryRegion}</h2>\n            <h2>{selectedTrail.provinceState}</h2>\n            <p>{selectedTrail.confirmed}</p>\n            <button onClick={()=> props.handleClick(selectedTrail)}>See Trails</button>\n            <button onClick={()=> props.handleClick(selectedTrail)}>See Trails</button>\n\n          </div>\n\n          </InfoWindow>\n      )}\n\n    </GoogleMap>\n    // </div>\n  );\n}\n\nexport const WrappedMap = withScriptjs(withGoogleMap(Map));\n"]},"metadata":{},"sourceType":"module"}