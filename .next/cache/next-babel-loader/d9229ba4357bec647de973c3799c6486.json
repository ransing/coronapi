{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('fetching');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (data) {\n                return data.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}","map":{"version":3,"sources":["/Users/ceaseless/Desktop/corona/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","fetchData","console","log","fetch","then","data","json"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAsB;AAAA,kBACPH,QAAQ,EADD;AAAA,MAC1BI,KAD0B;AAAA,MACnBC,QADmB;;AAAA,mBAEHL,QAAQ,EAFL;AAAA,MAE1BM,OAF0B;AAAA,MAEjBC,UAFiB;;AAIjCN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AADR;AAAA,+CAE2BC,KAAK,CAACR,GAAD,CAAL,CAClBS,IADkB,CACZ,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,eADQ,CAF3B;;AAAA;AAEcD,cAAAA,IAFd;AAIQR,cAAAA,QAAQ,CAACQ,IAAD,CAAR;;AAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAL,IAAAA,SAAS;AACZ,GARQ,EAQN,EARM,CAAT;AASA,SAAOJ,KAAP;AACH","sourcesContent":["import {useState, useEffect} from 'react'\n\nexport default function useStats(url){\n    const [stats, setStats] = useState();\n    const [loading, setLoading] = useState();\n    \n    useEffect(() => {\n        async function fetchData(){\n                console.log('fetching')\n                const data = await fetch(url)\n                .then (data => data.json());\n                setStats(data)\n        }\n        fetchData();\n    }, []);\n    return stats; \n}\n"]},"metadata":{},"sourceType":"module"}