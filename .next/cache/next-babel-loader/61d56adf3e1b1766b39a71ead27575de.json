{"ast":null,"code":"var _jsxFileName = \"/Users/ceaseless/Desktop/corona/Components/Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\n\nfunction Map(props) {\n  const {\n    0: cases,\n    1: setCases\n  } = useState([]);\n  const {\n    0: selectedCase,\n    1: setSelectedCase\n  } = useState(null);\n  useEffect(() => {\n    fetch(\"https://covid19.mathdro.id/api/confirmed\").then(res => res.json()).then(cases => {\n      setCases(cases); // debugger;\n    });\n    console.log(cases);\n  }, []);\n\n  const mapOnClick = cases => {\n    console.log(cases);\n    setSelectedCase(cases);\n  };\n\n  return (// <div style={{ \"height\": \"120\", \"width\": \"120\" }}>\n    //   <div>\n    //     hgig \n    //     </div>\n    __jsx(GoogleMap // style={{ height: '100vh', width: '100%' }}\n    // width=\"120\" \n    // height=\"120\"\n    , {\n      defaultZoom: 7,\n      defaultCenter: {\n        lat: 39,\n        lng: -106\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, selectedTrail && __jsx(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedTrail.latitude),\n        lng: parseFloat(selectedTrail.longitude)\n      },\n      onCloseClick: () => setSelectedCase(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, selectedCase.countryRegion), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, selectedCase.confirmed), __jsx(\"button\", {\n      onClick: () => props.handleClick(selectedCase),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"See Cases\")))) // </div>\n\n  );\n}\n\nexport const WrappedMap = withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/ceaseless/Desktop/corona/Components/Map.js"],"names":["React","useState","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Map","props","cases","setCases","selectedCase","setSelectedCase","fetch","then","res","json","console","log","mapOnClick","lat","lng","selectedTrail","parseFloat","latitude","longitude","countryRegion","confirmed","handleClick","WrappedMap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;;AAQA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACW,YAAD;AAAA,OAAeC;AAAf,MAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEML,KAAK,IAAI;AACbC,MAAAA,QAAQ,CAACD,KAAD,CAAR,CADa,CAEb;AACC,KALH;AAMAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMU,UAAU,GAAIV,KAAD,IAAW;AAC5BQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAG,IAAAA,eAAe,CAACH,KAAD,CAAf;AACD,GAHD;;AAKA,SAEE;AACA;AACA;AACA;AAEA,UAAC,SAAD,CACE;AACA;AACA;AAHF;AAIE,MAAA,WAAW,EAAE,CAJf;AAKE,MAAA,aAAa,EAAE;AAAEW,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,GAAG,EAAE,CAAC;AAAjB,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBIC,aAAa,IACb,MAAE,UAAF;AACA,MAAA,QAAQ,EAAE;AACRF,QAAAA,GAAG,EAAEG,UAAU,CAACD,aAAa,CAACE,QAAf,CADP;AAERH,QAAAA,GAAG,EAAEE,UAAU,CAACD,aAAa,CAACG,SAAf;AAFP,OADV;AAKA,MAAA,YAAY,EAAE,MAAMb,eAAe,CAAC,IAAD,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,YAAY,CAACe,aAAlB,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIf,YAAY,CAACgB,SAAjB,CAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAKnB,KAAK,CAACoB,WAAN,CAAkBjB,YAAlB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CAPF,CAtBJ,CAPF,CAgDE;;AAhDF;AAkDD;;AAED,OAAO,MAAMkB,UAAU,GAAG1B,YAAY,CAACC,aAAa,CAACG,GAAD,CAAd,CAA/B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\n\nfunction Map(props) {\n    const [cases, setCases] = useState([]);\n    const [selectedCase, setSelectedCase] = useState(null)\n\n  useEffect(() => {\n    fetch(\"https://covid19.mathdro.id/api/confirmed\")\n    .then(res => res.json())\n    .then(cases => {\n      setCases(cases);\n      // debugger;\n      });\n    console.log(cases);\n  }, []);\n\n  const mapOnClick = (cases) => {\n    console.log(cases)\n    setSelectedCase(cases)\n  }\n\n  return (\n\n    // <div style={{ \"height\": \"120\", \"width\": \"120\" }}>\n    //   <div>\n    //     hgig \n    //     </div>\n\n    <GoogleMap\n      // style={{ height: '100vh', width: '100%' }}\n      // width=\"120\" \n      // height=\"120\"\n      defaultZoom={7}\n      defaultCenter={{ lat: 39, lng: -106 }}\n    >\n      \n      {/* {cases.map(case => (\n          <Marker\n            onClick ={() => mapOnClick(case)}\n            key={case.id}\n            position={{\n              lat: parseFloat(trail.latitude),\n              lng: parseFloat(trail.longitude)\n            }}\n            \n          />\n        )\n      )} */}\n\n      { selectedTrail && (\n        < InfoWindow\n        position={{\n          lat: parseFloat(selectedTrail.latitude),\n          lng: parseFloat(selectedTrail.longitude)\n        }}\n        onCloseClick={() => setSelectedCase(null) }\n        >\n          <div>\n            <h2>{selectedCase.countryRegion}</h2>\n            {/* <p>{selectedTrail.address}</p> */}\n            <p>{selectedCase.confirmed}</p>\n            <button onClick={()=> props.handleClick(selectedCase)}>See Cases</button>\n\n          </div>\n\n          </InfoWindow>\n      )}\n\n    </GoogleMap>\n    // </div>\n  );\n}\n\nexport const WrappedMap = withScriptjs(withGoogleMap(Map));\n"]},"metadata":{},"sourceType":"module"}