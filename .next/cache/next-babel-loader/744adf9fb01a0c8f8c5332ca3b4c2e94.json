{"ast":null,"code":"var _jsxFileName = \"/Users/ceaseless/Desktop/corona/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats.js';\nexport default function CountrySelector() {\n  const {\n    stats: countries,\n    loading,\n    error\n  } = useStats('https://covid19.mathdro.id/api/countries');\n  console.log(countries);\n  const {\n    0: selectedCountry,\n    1: setSelectedCountry\n  } = useState('USA');\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"error...\");\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"loading \");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Current selection: \", selectedCountry), __jsx(\"select\", {\n    onChange: e => {\n      setSelectedCountry(e.target.value);\n      console.log(selectedCountry);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, code]) => __jsx(\"option\", {\n    selected: selectedCountry === countries.iso3[code],\n    key: code,\n    value: countries.iso3[code],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, country))), __jsx(Stats, {\n    url: `https://covid19.mathdro.id/api/countries/${selectedCountry}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ceaseless/Desktop/corona/components/CountrySelector.js"],"names":["useState","useEffect","useStats","Stats","CountrySelector","stats","countries","loading","error","console","log","selectedCountry","setSelectedCountry","e","target","value","Object","entries","map","country","code","iso3"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,eAAT,GAA0B;AACrC,QAAM;AAACC,IAAAA,KAAK,EAAEC,SAAR;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,MAAqCN,QAAQ,CAAC,0CAAD,CAAnD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,QAAM;AAAA,OAACK,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,MAAGO,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACV,MAAG,CAACF,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACf,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBK,eAAxB,CADJ,EAEI;AAAQ,IAAA,QAAQ,EAAIE,CAAC,IAAI;AACrBD,MAAAA,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKK,MAAM,CAACC,OAAP,CAAeX,SAAS,CAACA,SAAzB,EAAoCY,GAApC,CAAwC,CACrC,CAACC,OAAD,EAAUC,IAAV,CADqC,KAElC;AAAQ,IAAA,QAAQ,EAAGT,eAAe,KAAKL,SAAS,CAACe,IAAV,CAAeD,IAAf,CAAvC;AAA6D,IAAA,GAAG,EAAEA,IAAlE;AAAwE,IAAA,KAAK,EAAId,SAAS,CAACe,IAAV,CAAeD,IAAf,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,OADN,CAFN,CAJL,CAFJ,EAcI,MAAC,KAAD;AAAO,IAAA,GAAG,EAAG,4CAA2CR,eAAgB,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADA;AAkBH","sourcesContent":["import {useState, useEffect } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats.js'\n\nexport default function CountrySelector(){\n    const {stats: countries, loading, error} = useStats('https://covid19.mathdro.id/api/countries');\n    console.log(countries);\n    const [selectedCountry, setSelectedCountry] = useState('USA');\n    if(loading) return <p>loading...</p>\n    if(error) return <p>error...</p>\n    if(!countries) return <p>loading </p>\n    return (\n    <div> \n        <h2>Current selection: {selectedCountry}</h2>\n        <select onChange= { e => {\n            setSelectedCountry(e.target.value);\n            console.log(selectedCountry)\n        }}>\n            {Object.entries(countries.countries).map((\n                [country, code]) => (\n                   <option selected= {selectedCountry === countries.iso3[code]} key={code} value = {countries.iso3[code]}>\n                        {country}\n                    </option>\n            ))}\n            \n        </select>\n        <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}></Stats>\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}